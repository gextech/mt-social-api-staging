FORMAT: 1A
HOST: http://staging.api.mtfan.mediotiempo.com

# MTSocial API Staging services ready
API de MT Fan 

# Group Login
<a id="login" ></a>

To login into the MTSocial API API, use following calls:

- 1. `POST` your credentials in JSON body to the *login* resource. An **token** is returned back.
- 2. Use the **token** in your API calls header **X-Auth-Token**.

Remember that TT Token has **limited validity**. Once you received 401 Unauthorized Response, you need to GET new TT Token.

###Login Properties
- username (string) : User's email
- password (string) : User's password


## Login with a user [/login]
### POST
This resource is the first. Use it to log into the API.

`Please use your MTSocial API account credentials for API calls.`

+ Request (application/json)
    + Headers

            Accept: application/json

    + Body

            {"username":"user@company.com","password":"YourPassword"}

+ Response 200 (application/json)
 
    + Body

            {"token":"8ckoqbsr1ae90sfd8jvkfp4bqq4r80ac","person":{"id":"7d3c28b7-9d42-45d5-8a71-ad285842505b","name":"Tomas Salazar","email":"tsalazar@expansion.com.mx","age":null,"gender":null}}


## Check if token is still valid [/api/validate]
Basic service to validate token, this is for testing.

Use the token retrive from login call as header X-Auth-Token.
### GET
+ Headers

            X-Auth-Token: {token}


+ Response 200 (application/json)
 
    + Body

            {"token":"o5245j7tn44hf1gvalbvkvgjk5t9s9cv","roles":["ROLE_ADMIN","ROLE_ROOT‚Äù]}

    
## Lists allowed people [/v1/people/]

Get basic info for logged person 

### Person details [GET]
+ Response 200 (application/json)

            {"id":1,"name":"Domingo Suarez Torres","email":"dsuarez@expansion.com.mx"}


# Group Register
<a id="register" ></a>

To register into the MTSocial API API, use following calls:

- 1. `POST` your personal data in JSON body to the *register* resource. An **token** is returned back.
- 2. Use the **token** in your API calls header **X-Auth-Token**.

Remember that TT Token has **limited validity**. Once you received 401 Unauthorized Response, you need to GET new TT Token.

###Login Properties
- username (string) : User's email
- name (string)     : User's name
- password (string) : User's password
- genre (string)    : Optional User's genre (FEMALE, MALE)
- birthdate   (logn)    : Optional User's age

## Create a user [/v1/people]
### POST
This resource register new user into MTSocial API and login

`Please use your MTSocial API account credentials for API calls.`

+ Request (application/json)
    + Headers

            Accept: application/json

    + Body

            {"email":"user@company.com", "name":"username" , "password":"YourPassword", "gender":"FEMALE", "birthdate":null}

+ Response 201 (application/json)
 
    + Body
    
            {"person":{"id":"8132259c-92ff-4568-908a-ce6445a07ed1","name":"Testing test","email":"test-in@expansion.com.mx"},"token":"3onh61e2ci6s6vk57qve4b5taarkndge"}

## Login with social API [/v1/people/loginSocial]
### POST
This resource log in user or register a new user into MTSocial API and login

`Please use your MTSocial API account credentials for API calls.`

+ Request (application/json)
    + Headers

            Accept: application/json
            X-Auth-Token: {token}

    + Body

            {"uid":"zdadzsdaae"}

+ Response 200 (application/json)
 
    + Body

            {"person":{"id":"8132259c-92ff-4568-908a-ce6445a07ed1","name":"Testing test","email":"test-in@expansion.com.mx"},"token":"3onh61e2ci6s6vk57qve4b5taarkndge"}


## Publish a post with media [/timeline/publishWithMedia]

### Upload a new comment to the timeline, accompanied with some media [POST]
With this service we can upload some media, currently only images are supported (:
This is uploaded as a normal form POST.

The message has to be URLEncoded correctly
You can upload whatever amount of medias you want :D

This is a normal FORM!

The request has the following parameters:

- **comment** Optional, It is the comment for the post the same as the comment in any post
- **sharedId** Optional, In case this is a reshare (like a retweet), this is the id of the commented post
- **commentId** Optional, In case this post is a comment, this is the id of the commented post
- **media[]** Could be more than one, just a normal file

+ Request

    + Headers
    
            X-Auth-Token: {token}
            Content-Length: 15532
            Content-Type: multipart/form-data;boundary=cce6735153bf14e47e999e68bb183e70a1fa7fc89722fc1efdf03a917340

    + Body
    
            --cce6735153bf14e47e999e68bb183e70a1fa7fc89722fc1efdf03a917340
            Content-Disposition: form-data; name="comment"
            
            Hola mundo cruel
            --cce6735153bf14e47e999e68bb183e70a1fa7fc89722fc1efdf03a917340
            Content-Disposition: form-data; name="sharedId"
            
            c9ec79a99-a14-46f0-93b4-434efe468c9e
            --cce6735153bf14e47e999e68bb183e70a1fa7fc89722fc1efdf03a917340
            Content-Disposition: form-data; name="commentId"
            
            434efe468-a14-46f0-93b3-c9ec79a99a14
            --cce6735153bf14e47e999e68bb183e70a1fa7fc89722fc1efdf03a917340
            Content-Type: application/octet-stream
            Content-Disposition: form-data; name="media[]"; filename="amy.png"
            
            ...
            --cce6735153bf14e47e999e68bb183e70a1fa7fc89722fc1efdf03a917340
            Content-Type: application/octet-stream
            Content-Disposition: form-data; name="media[]"; filename="clara.png"



+ Response 200 (application/json)


        {
            "checkin": null, 
            "comment": "hola mundo", 
            "follow": null, 
            "id": "434efe46-ca34-46f0-93b4-c9ec79a99a14", 
            "like": null, 
            "media": [
                {
                    "filename": "27fb5d62-7ec4-4a4f-8702-f818973ffc6a-x1396013843-2.jpg.pagespeed.ic.0Zl8PZYdyZ.jpg", 
                    "mimeType": "image/jpeg", 
                    "originalFilename": "x1396013843-2.jpg.pagespeed.ic.0Zl8PZYdyZ.jpg", 
                    "processedImages": {
                        "baseUrl": "https://mtfan-dev.s3.amazonaws.com/27fb5d62-7ec4-4a4f-8702-f818973ffc6a-x1396013843-2.jpg.pagespeed.ic.0Zl8PZYdyZ-", 
                        "images": {
                            "resized": [
                                {
                                    "size": {
                                        "h": 360, 
                                        "w": 480
                                    }, 
                                    "suffix": "480x360.jpg"
                                }, 
                                {
                                    "size": {
                                        "h": 180, 
                                        "w": 240
                                    }, 
                                    "suffix": "240x180.jpg"
                                }
                            ], 
                            "thumbnails": [
                                {
                                    "size": 300, 
                                    "suffix": "thumb-300.jpg"
                                }
                            ]
                        }
                    }, 
                    "url": "https://mtfan-dev.s3.amazonaws.com/27fb5d62-7ec4-4a4f-8702-f818973ffc6a-x1396013843-2.jpg.pagespeed.ic.0Zl8PZYdyZ.jpg", 
                    "uuid": "27fb5d62-7ec4-4a4f-8702-f818973ffc6a"
                }
            ], 
            "parentId": null, 
            "publisher": {
                "avatarUrl": null, 
                "id": "50cae0e0-0d98-4faa-acf4-401f8d133a53", 
                "type": "person"
            }, 
            "sharedId": null, 
            "timestamp": "2014-04-07T10:02:21.129-05:00"
        }
        
## Upload an avatar [/people/uploadAvatar]

### Upload a new avatar for the user [POST]
With this service we can upload you avatar, it is a multipart request

The message has to be URLEncoded correctly

This is a normal FORM!

+ Request

    + Headers
    
            X-Auth-Token: {token}
            Content-Length: 15532
            Content-Type: multipart/form-data;boundary=434efe46ca3446f093b4c9ec79a99a14

    + Body
    
            --434efe46ca3446f093b4c9ec79a99a14
            Content-Type: application/octet-stream
            Content-Disposition: form-data; name="avatar"; filename="me.png"
            
            ...


+ Response 200 (application/json)


        {
            "filename": "28e3eb32-a7d4-419c-8e0b-fd68b7a9ff27-x1396013843-me.png", 
            "mimeType": "image/png", 
            "originalFilename": "me.png", 
            "url": "https://mtfan-dev.s3.amazonaws.com/28e3eb32-a7d4-419c-8e0b-fd68b7a9ff27-x1396013843-me.png", 
            "uuid": "28e3eb32-a7d4-419c-8e0b-fd68b7a9ff27"
        }
        
        

# Group Follow
        
## Follow something [/v1/follow/${followedType}/${followedId}]
### POST

This resource mark a Follow between the current user and a [person|team|match]

The request has the following parameters:

- **followedType** Required, It is the Type of the stuff to be followed. It can be: [ *person* | *team* | *match* ]

- **followedId** Required, It is the Id of the stuff to be followed. Example: *0aeaa55c-43d7-458b-be7e-53005f4c4e36*

`Please use your MTSocial API account credentials for API calls.`

+ Request (application/json)
    + Headers

            Accept: application/json
    + Body
    
            {
            }

+ Response 200 (application/json)
 
    + Body

            {
                "checkin": null, 
                "comment": null, 
                "follow": {
                    "follower": {
                        "avatarUrl": null, 
                        "id": "b5e61df9-cbe2-4d43-a8af-7d37ee80f144", 
                        "type": "person"
                    }, 
                    "following": {
                        "avatarUrl": null, 
                        "id": "0aeaa55c-43d7-458b-be7e-53005f4c4e36", 
                        "type": "person"
                    }
                }, 
                "id": "6099eadd-7542-4a4a-b970-c274c85bec29", 
                "like": null, 
                "media": null, 
                "parentId": null, 
                "publisher": {
                    "avatarUrl": null, 
                    "id": "3c7c2c0b-42e6-4acd-845d-6f737b72a141", 
                    "type": "person"
                }, 
                "sharedId": null, 
                "timestamp": "2014-04-07T13:06:23.308-05:00"
            }

### DELETE
This resource mark an UnFollow between the current user and a [person|team|match]

The request has the following parameters:

- **followedType** Required, It is the Type of the stuff to be followed. It can be: [ *person* | *team* | *match* ]

- **followedId** Required, It is the Id of the stuff to be followed. Example: *0aeaa55c-43d7-458b-be7e-53005f4c4e36*

`Please use your MTSocial API account credentials for API calls.`

+ Request 
    + Headers
    
            Accept: application/json
    
    + Body 
    
            {
            }

+ Response 200 (application/json)
 
    + Body

            {
                
            }

## Returns all instances following this user [/v1/follow/following/${followingType}]
### GET
This resource get all followings of type *followingType* of the current user 

The request has the following parameters:

- **followingType** Required, It is the Type of the followings required. It can be: [ *person* | *team* | *match* ]


`Please use your MTSocial API account credentials for API calls.`

+ Request 
    + Headers
    
            Accept: application/json
    
    + Body 
    
            {
            }

+ Response 200 (application/json)
 
    + Body

            [
                {
                    "follow": {
                        "follower": {
                            "avatarUrl": null, 
                            "id": "b5e61df9-cbe2-4d43-a8af-7d37ee80f144", 
                            "type": "person"
                        }, 
                        "following": {
                            "avatarUrl": null, 
                            "id": "123489", 
                            "type": "eventParticipant"
                        }
                    }
                }, 
                {
                    "follow": {
                        "follower": {
                            "avatarUrl": null, 
                            "id": "b5e61df9-cbe2-4d43-a8af-7d37ee80f144", 
                            "type": "person"
                        }, 
                        "following": {
                            "avatarUrl": null, 
                            "id": "123", 
                            "type": "eventParticipant"
                        }
                    }
                }
            ]

## Return all followers of a certain type [/v1/follow/followers/${followerType}]
### GET
This resource get all followings of type *followerType* of the current user 

The request has the following parameters:

- **followerType** Required, It is the Type of the followers required. It can be: [ *person* | *team* | *match* ]


`Please use your MTSocial API account credentials for API calls.`

+ Request 
    + Headers
    
            Accept: application/json
    
    + Body 
    
            {
            }

+ Response 200 (application/json)
 
    + Body

            [
                {
                    "follow": {
                        "follower": {
                            "avatarUrl": null, 
                            "id": "b5e61df9-cbe2-4d43-a8af-7d37ee80f144", 
                            "type": "person"
                        }, 
                        "following": {
                            "avatarUrl": null, 
                            "id": "123489", 
                            "type": "eventParticipant"
                        }
                    }
                }, 
                {
                    "follow": {
                        "follower": {
                            "avatarUrl": null, 
                            "id": "b5e61df9-cbe2-4d43-a8af-7d37ee80f144", 
                            "type": "person"
                        }, 
                        "following": {
                            "avatarUrl": null, 
                            "id": "123", 
                            "type": "eventParticipant"
                        }
                    }
                }
            ]

## List of tournaments or leagues [/v1/tournaments]
   

### List of tournaments or leagues [GET]
+ Headers

            X-Auth-Token: {token}

+ Response 200 (application/json)

        [
            {
                "idLeague":23434,
                "name":"Primera Division"
            },
            {
                "idLeague":234542,
                "name": "Liga Espa√±ola"
            }
        ]

## List of teams of tournaments or league [/v1/tournaments/${idLeague}/teams/]
### List of teams  [GET]
+ Headers

            X-Auth-Token: {token}

+ Response 201 (application/json)

        {
            "idLeague":23434,
            "name":"Primera Division",
            "teams":
                [
                    {
                        "idTeam": 56456, 
                        "name": "Am√©rica", 
                        "shortName":"CA",
                        "following":1,
                        "urlImagen":"http://gex.mediotiempo.media/23123.jpg"
                    }, 
                    {
                        "idTeam": 2234234,
                        "name": "Cruz Azul", 
                        "shortName": "CAz"
                        "following":0,
                        "urlImage":"http://gex.mediotiempo.media/23123.jpg"
                    }
                ]
         }


